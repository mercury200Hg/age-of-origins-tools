# Generated by Django 4.2.7 on 2023-11-28 00:41

import csv
import os

from django.db import migrations


class Migration(migrations.Migration):
    dependencies = [
        ('troops_calculator', '0009_troop_battle_power'),
    ]

    def import_categories(apps, schema_editor):
        print(os.path.abspath("."))
        with open("troops_calculator/seed_data/category.csv", "r") as category_file:
            reader = csv.reader(category_file)
            category = apps.get_model("troops_calculator", "Category")
            for row in reader:
                if row[0] == "Name":
                    continue  # Ignore the header
                obj, created = category.objects.get_or_create(name=row[0], row=row[1], building=row[2])

    def import_troops(apps, schema_editor):
        category = apps.get_model("troops_calculator", "Category")
        troop = apps.get_model("troops_calculator", "Troop")
        with open("troops_calculator/seed_data/camp_troops.csv", "r") as category_file:
            reader = csv.reader(category_file)
            for row in reader:
                if row[0] == "Name" or row[0] == "":
                    continue  # Ignore the header
                print(row)
                category_fk = category.objects.get(name=row[6])
                obj, created = troop.objects.get_or_create(name=row[0], level=row[1], battle_power=row[2],
                                                           load_capacity=row[3],
                                                           attack=row[4],
                                                           units=row[5], category=category_fk,
                                                           min_building_lvl_required=row[7])
                print(obj, created)
        with open("troops_calculator/seed_data/factory_troops.csv", "r") as category_file:
            reader = csv.reader(category_file)
            for row in reader:
                if row[0] == "Name" or row[0] == "":
                    continue  # Ignore the header
                print(row)
                category_fk = category.objects.get(name=row[6])
                obj, created = troop.objects.get_or_create(name=row[0], level=row[1], battle_power=row[2],
                                                           load_capacity=row[3],
                                                           attack=row[4],
                                                           units=row[5], category=category_fk,
                                                           min_building_lvl_required=row[7])
                print(obj, created)
        with open("troops_calculator/seed_data/workshop_troops.csv", "r") as category_file:
            reader = csv.reader(category_file)
            for row in reader:
                if row[0] == "Name" or row[0] == "":
                    continue  # Ignore the header
                print(row)
                category_fk = category.objects.get(name=row[6])
                obj, created = troop.objects.get_or_create(name=row[0], level=row[1], battle_power=row[2],
                                                           load_capacity=row[3],
                                                           attack=row[4],
                                                           units=row[5], category=category_fk,
                                                           min_building_lvl_required=row[7])
                print(obj, created)
        # with open("troops_calculator/seed_data/biochemical_workshop_troops.csv", "r") as category_file:
        #     reader = csv.reader(category_file)
        #     for row in reader:
        #         if row[0] == "Name":
        #             continue  # Ignore the header
        #         category_fk = category.objects.get(name=row[6])
        #         obj, created = troop.objects.get_or_create(name=row[0], level=row[1], battle_power=row[2],
        #                                                    load_capacity=row[3],
        #                                                    attack=row[4],
        #                                                    units=row[5], category=category_fk,
        #                                                    min_building_lvl_required=row[7])
        #         print(obj, created)

    operations = [
        migrations.RunPython(import_categories),
        migrations.RunPython(import_troops),
    ]
